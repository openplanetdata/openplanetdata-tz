name: Build & publish TZ GeoParquet

on:
  workflow_dispatch:
  schedule:
    - cron: '0 1 * * *'   # daily 01:00 UTC

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # ── get latest TZ boundaries ─────────────────────────────────────────
      - name: Download timezone GeoJSON
        run: |
          curl -L -o tz.zip \
            https://github.com/evansiroky/timezone-boundary-builder/releases/latest/download/timezones-with-oceans.geojson.zip
          unzip -j tz.zip -d .
          mv combined-with-oceans.json planet-tz.geojson

      # ── convert → GeoParquet with stable GDAL container ─────────────
      - name: Convert GeoJSON → GeoParquet
        run: |
          docker run --rm -v "$PWD":/data \
            ghcr.io/osgeo/gdal:ubuntu-full-latest \
            ogr2ogr -f Parquet /data/planet-tz.parquet /data/planet-tz.geojson \
                    -lco GEOMETRY_ENCODING=WKB
          ls -alh

      # ── create metadata ──────────────────────────────────────────────────
      - name: Create metadata
        id: create_meta
        uses: openplanetdata/actions/create-metadata@main
        with:
          file: planet-tz.parquet
          remote_filename: planet-latest.tz.parquet
          remote_path: /tz/planet/geoparquet
          remote_version: 1
          tags: |
            geoparquet
            public
            timezone

      # ── upload to R2 ─────────────────────────────────────────────────────
      - name: Upload to R2
        uses: openplanetdata/actions/upload@main
        env:
          RCLONE_CONFIG_DATA: ${{ secrets.RCLONE_CONFIG_DATA }}
        with:
          file: planet-tz.parquet
          remote_filename: planet-latest.tz.parquet
          remote_path: /tz/planet/geoparquet
          remote_version: 1

      # ── cleanup ──────────────────────────────────────────────────────────
      - name: Cleanup downloaded and generated files
        if: always()
        run: |
          rm -f tz.zip planet-tz.geojson
          rm -f planet-tz.parquet planet-tz.parquet.{sha256,metadata}
